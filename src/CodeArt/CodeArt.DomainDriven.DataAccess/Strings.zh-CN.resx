<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CanNotDeleteNonAggregateRoot" xml:space="preserve">
    <value>不能删除非内聚根对象</value>
  </data>
  <data name="ConstructionParameterError" xml:space="preserve">
    <value>没有找到类型{0}的仓储构造参数 {1} 的数据，请考虑是否需要自定义加载方式</value>
  </data>
  <data name="ConstructionParameterNoProperty" xml:space="preserve">
    <value>没有找到构造参数 {0} 对应的属性{1}定义，请检查属性是否已标记PropertyRepositoryAttribute或者自定义构造参数加载的方法</value>
  </data>
  <data name="CreateChildTable" xml:space="preserve">
    <value>CreateChildTable 错误,master {0},FieldType {1},objectType{2}</value>
  </data>
  <data name="CreateInheritedTableError" xml:space="preserve">
    <value>CreateInheritedTable 错误，类型{0} 表类型{1}</value>
  </data>
  <data name="CreateObjectCollectionError" xml:space="preserve">
    <value>创建类型为{0}的成员时，必须指定属性所在的对象，该错误有可能是在构造对象时需要传入类型为{0}的构造参数，由此导致的双向构造引用</value>
  </data>
  <data name="DomainObjectTypeWrong" xml:space="preserve">
    <value>在领域设计中，除了基本数值类型、Emptyable结构外，所有的对象应该继承自值对象、内聚根对象、引用对象（实体对象）、远程内聚根</value>
  </data>
  <data name="LoadPropertyError" xml:space="preserve">
    <value>没有成功加载属性 {0} 的数据，请考虑是否需要自定义加载方式</value>
  </data>
  <data name="NestedCollection" xml:space="preserve">
    <value>集合中的成员也为集合类型，不建议在领域设计中制定如此复杂的对象关系</value>
  </data>
  <data name="NoDatabaseAgent" xml:space="preserve">
    <value>没有注册数据库代理</value>
  </data>
  <data name="NoDbType" xml:space="preserve">
    <value>没有 {0} 对应的数据库类型</value>
  </data>
  <data name="NoPersistentOperation" xml:space="preserve">
    <value>没有实现领域类型{0}的持久操作{1}</value>
  </data>
  <data name="NoQuery" xml:space="preserve">
    <value>没有实现查询{0}</value>
  </data>
  <data name="NotCorrectSqlSelect" xml:space="preserve">
    <value>{0} 不是正确的 sql select 查询语句</value>
  </data>
  <data name="NotFoundDbField" xml:space="preserve">
    <value>找不到类型{0}对应的DbField</value>
  </data>
  <data name="NotFoundDerivedType" xml:space="preserve">
    <value>没有找到{0}的领域派生类类型对应的数据表</value>
  </data>
  <data name="NotFoundFillArguments" xml:space="preserve">
    <value>类型{0}的查询{1}中没有找到数据库{2}填充参数的方法</value>
  </data>
  <data name="NotFoundQueryExpression" xml:space="preserve">
    <value>类型{0}的查询{1}中没有找到数据库{2}的查询表达式</value>
  </data>
  <data name="NotFoundTableField" xml:space="preserve">
    <value>表{0}没有字段{1}</value>
  </data>
  <data name="NotSupportDatabase" xml:space="preserve">
    <value>{0} 不支持数据库 {1}</value>
  </data>
  <data name="NotSupportDbType" xml:space="preserve">
    <value>数据访问不支持类型{0}</value>
  </data>
  <data name="NotSupportMultipleProperties" xml:space="preserve">
    <value>{0}错误，尚不支持查询多个属性</value>
  </data>
  <data name="PageNeedOrder" xml:space="preserve">
    <value>翻页查询需要指定排序语句</value>
  </data>
  <data name="PersistentObjectError" xml:space="preserve">
    <value>类型{0}错误，直接持久化的对象类型必须为IAggregateRoot或IEntityObjectPro</value>
  </data>
  <data name="PropertyValueRepeated" xml:space="preserve">
    <value>{0}{1}重复</value>
  </data>
  <data name="QueryExpressionMalformed" xml:space="preserve">
    <value>查询表达式 '{0}' 格式错误</value>
  </data>
  <data name="QueryParamTypeError" xml:space="preserve">
    <value>查询参数 {0} 类型错误</value>
  </data>
  <data name="UnableGetId" xml:space="preserve">
    <value>无法获得对象 {0} 的编号</value>
  </data>
  <data name="UnableLoadExternalObject" xml:space="preserve">
    <value>无法加载内聚模型以外的外部象，请自定义加载方法，数据路径 {0}</value>
  </data>
  <data name="UnrecognizedSqlFunction" xml:space="preserve">
    <value>未识别的sql函数{0}</value>
  </data>
</root>