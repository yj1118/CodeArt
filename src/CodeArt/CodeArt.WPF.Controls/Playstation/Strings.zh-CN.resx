<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CanNotDisableUsedView" xml:space="preserve">
    <value>不能禁用当前使用的视图</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>暂无数据</value>
  </data>
  <data name="NoDesktopButton" xml:space="preserve">
    <value>没有找到名称为 {0} 的桌面按钮</value>
  </data>
  <data name="NotFoundView" xml:space="preserve">
    <value>没有找到视图 {0}</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>请稍候</value>
  </data>
  <data name="ProcessingRequest" xml:space="preserve">
    <value>正在处理请求</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="SuccessfulOperation" xml:space="preserve">
    <value>操作成功</value>
  </data>
  <data name="SystemPrompt" xml:space="preserve">
    <value>系统提示</value>
  </data>
  <data name="PleaseInitializeItemsComponent" xml:space="preserve">
    <value>请先初始化后再使用Items组件</value>
  </data>
  <data name="NewItem" xml:space="preserve">
    <value>新增项</value>
  </data>
  <data name="PleaseEnter" xml:space="preserve">
    <value>请输入</value>
  </data>
  <data name="CanNotBeLessItems" xml:space="preserve">
    <value>{0}不能少于 {1} 项</value>
  </data>
  <data name="CanNotBeMoreItems" xml:space="preserve">
    <value>{0}不能多于 {1} 项</value>
  </data>
  <data name="CanNotBeLessCharacters" xml:space="preserve">
    <value>{0}不能少于 {1} 个字</value>
  </data>
  <data name="CanNotBeLongerCharacters" xml:space="preserve">
    <value>{0}不能多于 {1} 个字</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="Minimize" xml:space="preserve">
    <value>最小化</value>
  </data>
  <data name="NoItemWithValue" xml:space="preserve">
    <value>没有找到Value为{0}的项</value>
  </data>
  <data name="UploadingFiles" xml:space="preserve">
    <value>正在上传文件</value>
  </data>
  <data name="UploadActionNotSet" xml:space="preserve">
    <value>没有设置UploadAction,不能使用Upload组件</value>
  </data>
  <data name="PleaseSelectFile" xml:space="preserve">
    <value>请选择文件</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="WaitUpload" xml:space="preserve">
    <value>请先上传{0}或等待{0}上传操作完成后再进行提交操作</value>
  </data>
  <data name="CanOnlyUp" xml:space="preserve">
    <value>{0}最多只能有{1}个</value>
  </data>
  <data name="PleaseUpload" xml:space="preserve">
    <value>请上传</value>
  </data>
  <data name="Keyboard" xml:space="preserve">
    <value>触摸键盘</value>
  </data>
  <data name="CloseClient" xml:space="preserve">
    <value>关闭客户端</value>
  </data>
</root>