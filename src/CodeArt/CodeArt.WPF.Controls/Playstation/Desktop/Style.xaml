<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ps="clr-namespace:CodeArt.WPF.Controls.Playstation">
    <Style TargetType="{x:Type ps:Desktop}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ps:Desktop">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <ps:ViewContainer x:Name="container" Grid.Row="0" Grid.Column="0"></ps:ViewContainer>
                        <ps:DesktopMenu x:Name="menu" VerticalAlignment="Bottom" Grid.Row="{TemplateBinding MenuFloat,Converter={x:Static ps:DesktopMenuRowConverter.Instance}}" Grid.Column="0" Margin="0 30 0 40"></ps:DesktopMenu>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ps:DesktopMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ps:DesktopMenu">
                    <WrapPanel x:Name="panel" Orientation="Horizontal" HorizontalAlignment="Center">
                    </WrapPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ps:DesktopMenuButton}">
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ps:DesktopMenuButton">
                    <Grid Background="Transparent" Margin="30 0 30 0">
                        <StackPanel>
                            <ps:ImagePro HorizontalAlignment="Center" Width="65" Height="65" Source="{TemplateBinding ImageSrc}"></ps:ImagePro>
                            <TextBlock HorizontalAlignment="Center" Margin="0 10 0 0" Foreground="#fff" FontSize="25" Text="{TemplateBinding Text}"></TextBlock>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Status" Value="{x:Static ps:FloatStatus.Focus}">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5" To="1" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation 
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                            From="1" To="1.3" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation 
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                            From="1" To="1.3" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetProperty="Opacity"
                                            From="1" To="0.5" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation 
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                            From="1.3" To="1" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation 
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                            From="1.3" To="1" Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ps:DesktopView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ps:DesktopView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding Converter={x:Static ps:BootstrapWidthConverter.Instance},ConverterParameter=xs:(*0.0625)}"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="{Binding Converter={x:Static ps:BootstrapWidthConverter.Instance},ConverterParameter=xs:(*0.0625)}"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <ps:DesktopViewHeader
                            x:Name="header" 
                            Height="120" 
                            Gap="120" 
                            Grid.Row="0" 
                            Grid.ColumnSpan="3" 
                            FontSize="30" 
                            Title="{TemplateBinding Title}"
                            Visibility="{TemplateBinding ShowHeader,Converter={x:Static ps:BoolCollapsedConverter.Instance}}">
                            <ContentPresenter Content="{TemplateBinding HeaderRight}" />
                        </ps:DesktopViewHeader>
                        <Grid x:Name="container" Grid.Row="1" 
                              Grid.Column="{TemplateBinding Full,Converter={x:Static ps:DesktopViewContainerColumnConverter.Instance}}"
                              Grid.ColumnSpan="{TemplateBinding Full,Converter={x:Static ps:DesktopViewContainerColumnSpanConverter.Instance}}">
                            <ContentPresenter x:Name="content" Visibility="{TemplateBinding Status,Converter={x:Static ps:ViewStatusVisibilityConverter.Instance}}" />
                            <ps:LoadingText
                                x:Name="loading"
                                Visibility="{TemplateBinding Status,Converter={x:Static ps:ViewStatusVisibilityConverter.Instance},ConverterParameter=1}" 
                                Message="{TemplateBinding LoadingMessage}">
                            </ps:LoadingText>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ps:DesktopViewHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ps:DesktopViewHeader">
                    <Grid x:Name="main">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding Gap}"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="{TemplateBinding Gap}"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" Opacity="0.6" FontWeight="Light" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Text="{TemplateBinding Title}"></TextBlock>
                        <WrapPanel Grid.Column="1" Margin="0 0 0 0" x:Name="rightRange" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <ContentPresenter></ContentPresenter>
                        </WrapPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>